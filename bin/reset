#!/bin/bash

startpath=$(cd $1; pwd -P)
origdepth=$(echo ${startpath} | grep -o / | wc -l)
depth=$(find ${startpath} -mindepth 1 -type d -name jobs -exec bash -c 'echo '{}' 2>/dev/null | grep -o / | wc -l' \; -quit)
if [[ "${depth}" == "" ]]
then
    depthdiff=""
else
    depthdiff=$((${depth}-${origdepth}))
fi

case $# in
    1)
        case ${depthdiff} in
            "")
                controllername=$(echo ${startpath} | rev | cut -d'/' -f2 | rev)
                modname=$(echo ${startpath} | rev | cut -d'/' -f3 | rev)
                ;;
            1)
                controllername=$(echo ${startpath} | rev | cut -d'/' -f1 | rev)
                modname=$(echo ${startpath} | rev | cut -d'/' -f2 | rev)
                ;;
            *)
                echo "Error: You are currently in the ${startpath} directory. You must be inside a modules directory."
                exit 1
                ;;
        esac
        ;;
    2)
        controllername=$2

        case ${depthdiff} in
            "")
                modname=$(echo ${startpath} | rev | cut -d'/' -f3 | rev)
                ;;
            1)
                modname=$(echo ${startpath} | rev | cut -d'/' -f2 | rev)
                ;;
            2)
                modname=$(echo ${startpath} | rev | cut -d'/' -f1 | rev)
                ;;
            *)
                echo "Error: You are currently in the ${startpath} directory. You must be inside a modules directory."
                exit 1
                ;;
        esac
        ;;
    3)
        modname=$2
        controllername=$3
        ;;
    *)
        echo "Error: You must provide no more than 3 arguments. $# provided."
        exit 1
        ;;
esac

startpath=$(echo ${startpath} | sed -E "s/\/${modname}(\/.*|$)//g")
modpath="${startpath}/${modname}"

if [ ! -d "${modpath}" ]
then
    mkdir ${modpath}
fi

controllerpath="${modpath}/${controllername}"

if [ ! -d "${controllerpath}" ]
then
    mkdir ${controllerpath}
fi

workpath="${controllername}/jobs"

if [ ! -d "${workpath}" ]
then
    mkdir ${workpath}
fi

#workpath="${controllerpath}/jobs"
#mongolinkpath="${SLURMONGO_ROOT}/packages/python/mongolink"
#toolspath="${SLURMONGO_ROOT}/scripts/tools"

rm ${controllerpath}/*.out ${controllerpath}/*.err tmp* 2>/dev/null
rm -r ${workpath}/* 2>/dev/null
rm ${controllerpath}/querystate* 2>/dev/null
rm ${controllerpath}/reloadstate* 2>/dev/null

echo "JobStep,ExitCode,Resubmit?" > ${controllerpath}/skipped 2>/dev/null
echo -e "BatchCounter,StepCounter\n1,1" > ${controllerpath}/batchcounter 2>/dev/null
echo "Pending" > ${controllerpath}/status 2>/dev/null

#currdir=$(pwd)
#cd ${mongolinkpath}
#python setup.py install --user --record filespy.txt
#sage --python setup.py install --user --record filessage.txt
#cd ${currdir}

#mongouri=$(cat ${controllerpath}/controller*.job | grep "mongouri=" | cut -d'=' -f2 | sed 's/"//g')
#basecollection=$(cat ${controllerpath}/controller*.job | grep "basecollection=" | cut -d'=' -f2 | sed 's/"//g')
#modname=$(cat ${controllerpath}/controller*.job | grep "modname=" | cut -d'=' -f2 | sed 's/"//g')
#markdone=$(cat ${controllerpath}/controller*.job | grep "markdone=" | cut -d'=' -f2 | sed 's/"//g')
#h11=$(cat ${controllerpath}/controller*.job | grep "h11=" | cut -d'=' -f2 | sed 's/"//g')
#python ${toolspath}/unmark.py "${basecollection}" "${modname}" "${markdone}" "{\"H11\":${h11}}"