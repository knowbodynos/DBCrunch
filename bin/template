#!/bin/bash

do_template () {
    modpath=$1
    controllerpath=$2
    workpath=$3

    modulespath="${CRUNCH_ROOT}/modules/modules"

    #cp "${binpath}/reset.bash" "${controllerpath}/"
    cp -T "${modulespath}/${modname}/${modname}_slurm.job" "${controllerpath}/crunch_${modname}_${controllername}_controller.job"
    echo "JobStep,ExitCode,Resubmit?" > ${controllerpath}/skipped 2>/dev/null
    echo -e "BatchCounter,StepCounter\n1,1" > ${controllerpath}/batchcounter 2>/dev/null
    echo "Pending" > ${controllerpath}/status 2>/dev/null

    modulesworkpath=$(echo ${modpath} | rev | cut -d'/' -f1 --complement | rev)

    files=$(find "${controllerpath}/" -mindepth 1 -type f -not -path '*/\.*' 2>/dev/null)
    for file in ${files}
    do
        #perl -i -pe 's|#SBATCH(.*)\${CRUNCH_ROOT}|#SBATCH\1'"${CRUNCH_ROOT}"'|g' ${file}
        sed -i "s|path\_to\_module|${modulesworkpath}|g" ${file}
        sed -i "s|template|${controllername}|g" ${file}
        #newfile=$(echo "${file}" | sed "s/template/${controllername}/g")
        #mv ${file} ${newfile} 2>/dev/null
    done

    echo "Finished creating template for ${modname}_${controllername}."
}

startpath=$(cd $1 && pwd -P)
origdepth=$(echo ${startpath} | grep -o / | wc -l)
depth=$(find ${startpath} -mindepth 1 -type d -name jobs -not -path '*/\.*' -exec bash -c 'echo '{}' 2>/dev/null | grep -o / | wc -l' \; -quit 2>/dev/null)
if [[ "${depth}" == "" ]]
then
    depthdiff=0
else
    depthdiff=$((${depth}-${origdepth}))
fi

case $# in
    1)
        case ${depthdiff} in
            0)
                modnames=($(echo ${startpath} | rev | cut -d'/' -f3 | rev))
                controllernames=($(echo ${startpath} | rev | cut -d'/' -f2 | rev))
                ;;
            1)
                modnames=($(echo ${startpath} | rev | cut -d'/' -f2 | rev))
                controllernames=($(echo ${startpath} | rev | cut -d'/' -f1 | rev))
                ;;
            2)
                modnames=($(echo ${startpath} | rev | cut -d'/' -f1 | rev))
                controllernames=($(find ${startpath}/ -maxdepth 1 -type d | rev | cut -d'/' -f1 | rev))
                ;;
            3)
                modnames=($(find ${startpath}/ -maxdepth 1 -type d -not -path '*/\.*' 2>/dev/null | rev | cut -d'/' -f1 | rev))
                controllernames=()
                ;;
            *)
                echo "Error: You are currently in the ${startpath} directory. You must be inside a modules directory."
                exit 1
                ;;
        esac
        ;;
    2)
        case ${depthdiff} in
            0)
                modnames=($(echo ${startpath} | rev | cut -d'/' -f3 | rev))
                controllernames=($2)
                ;;
            1)
                modnames=($(echo ${startpath} | rev | cut -d'/' -f2 | rev))
                controllernames=($2)
                ;;
            2)
                modnames=($(echo ${startpath} | rev | cut -d'/' -f1 | rev))
                controllernames=($2)
                ;;
            3)
                modnames=($2)
                controllernames=()
                ;;
            *)
                echo "Error: You are currently in the ${startpath} directory. You must be inside a modules directory."
                exit 1
                ;;
        esac
        ;;
    3)
        modnames=($2)
        controllernames=($3)
        ;;
    *)
        echo "Error: You must provide no more than 3 arguments. $# provided."
        exit 1
        ;;
esac

case ${#modnames[@]} in
    1)
        modname="${modnames[0]}"
        modpath="$(echo ${startpath} | sed -E "s/\/${modname}(\/.*|$)//g")/${modname}"

        if [ ! -d "${modpath}" ]
        then
            mkdir ${modpath}
        fi

        case ${#controllernames[@]} in
            0)
                controllernames=($(find ${modpath}/ -maxdepth 1 -type d -not -path '*/\.*' 2>/dev/null | rev | cut -d'/' -f1 | rev))

                for controllername in ${controllernames[@]}
                do
                    controllerpath="${modpath}/${controllername}"

                    if [ ! -d "${controllerpath}" ]
                    then
                        mkdir ${controllerpath}
                    fi

                    workpath="${controllerpath}/jobs"

                    if [ ! -d "${workpath}" ]
                    then
                        mkdir ${workpath}
                    fi

                    do_template ${modpath} ${controllerpath} ${workpath}
                done
                ;;
            1)
                controllername="${controllernames[0]}"
                controllerpath="${modpath}/${controllername}"

                if [ ! -d "${controllerpath}" ]
                then
                    mkdir ${controllerpath}
                fi

                workpath="${controllerpath}/jobs"

                if [ ! -d "${workpath}" ]
                then
                    mkdir ${workpath}
                fi

                do_template ${modpath} ${controllerpath} ${workpath}
                ;;
            *)
                for controllername in ${controllernames[@]}
                do
                    controllerpath="${modpath}/${controllername}"

                    if [ ! -d "${controllerpath}" ]
                    then
                        mkdir ${controllerpath}
                    fi

                    workpath="${controllerpath}/jobs"

                    if [ ! -d "${workpath}" ]
                    then
                        mkdir ${workpath}
                    fi

                    do_template ${modpath} ${controllerpath} ${workpath}
                done
                ;;
        esac
        ;;
    *)
        for modname in ${modnames[@]}
        do
            modpath="$(echo ${startpath} | sed -E "s/\/${modname}(\/.*|$)//g")/${modname}"

            if [ ! -d "${modpath}" ]
            then
                mkdir ${modpath}
            fi

            controllernames=($(find ${modpath}/ -maxdepth 1 -type d -not -path '*/\.*' 2>/dev/null | rev | cut -d'/' -f1 | rev))

            for controllername in ${controllernames[@]}
            do
                controllerpath="${modpath}/${controllername}"

                if [ ! -d "${controllerpath}" ]
                then
                    mkdir ${controllerpath}
                fi

                workpath="${controllerpath}/jobs"

                if [ ! -d "${workpath}" ]
                then
                    mkdir ${workpath}
                fi

                do_template ${modpath} ${controllerpath} ${workpath}
            done
        done
        ;;
esac