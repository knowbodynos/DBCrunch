#!/bin/bash

startpath=$(cd $1; pwd -P)
origdepth=$(echo ${startpath} | grep -o / | wc -l)
depth=$(find ${startpath} -mindepth 1 -type d -name jobs -exec bash -c 'echo '{}' 2>/dev/null | grep -o / | wc -l' \; -quit)
if [[ "${depth}" == "" ]]
then
    depthdiff=""
else
    depthdiff=$((${depth}-${origdepth}))
fi

case $# in
    1)
        case ${depthdiff} in
            "")
                controllername=$(echo ${startpath} | rev | cut -d'/' -f2 | rev)
                modname=$(echo ${startpath} | rev | cut -d'/' -f3 | rev)
                ;;
            1)
                controllername=$(echo ${startpath} | rev | cut -d'/' -f1 | rev)
                modname=$(echo ${startpath} | rev | cut -d'/' -f2 | rev)
                ;;
            *)
                echo "Error: You are currently in the ${startpath} directory. You must be inside a modules directory."
                exit 1
                ;;
        esac
        ;;
    2)
        controllername=$2

        case ${depthdiff} in
            "")
                modname=$(echo ${startpath} | rev | cut -d'/' -f3 | rev)
                ;;
            1)
                modname=$(echo ${startpath} | rev | cut -d'/' -f2 | rev)
                ;;
            2)
                modname=$(echo ${startpath} | rev | cut -d'/' -f1 | rev)
                ;;
            *)
                echo "Error: You are currently in the ${startpath} directory. You must be inside a modules directory."
                exit 1
                ;;
        esac
        ;;
    3)
        modname=$2
        controllername=$3
        ;;
    *)
        echo "Error: You must provide no more than 3 arguments. $# provided."
        exit 1
        ;;
esac

startpath=$(echo ${startpath} | sed -E "s/\/${modname}(\/.*|$)//g")
modpath="${startpath}/${modname}"

if [ ! -d "${modpath}" ]
then
    mkdir ${modpath}
fi

controllerpath="${modpath}/${controllername}"

if [ ! -d "${controllerpath}" ]
then
    mkdir ${controllerpath}
fi

workpath="${controllername}/jobs"

if [ ! -d "${workpath}" ]
then
    mkdir ${workpath}
fi

#loadfilenames=$(find ${mainpath}/jobs/ -maxdepth 1 -type f -name "*.docs" | rev | cut -d'/' -f1 | rev | tr '\n' ',')
loadfilenames=$(find ${workpath}/ -maxdepth 1 -type f -name "*.docs" | rev | cut -d'/' -f1 | rev)
#loadfilejobpatt=$(echo ${loadfilenames} | tr ',' '\n' | sed 's/\(.*_job_[0-9]*\).*/\1/g' | sort -u)
#mkdir ${mainpath}/jobs/requeued 2>/dev/null
#for patt in ${loadfilejobpatt}
#do
#    mv ${mainpath}/jobs/${patt}* ${mainpath}/jobs/requeued/ 2>/dev/null
#done
#for loadfilename in $(echo ${loadfilenames} | tr ',' '\n')
for loadfilename in ${loadfilenames}
do
    if [ -s "${loadfilename/.docs/.err}" ]
    then
        #errcode=$(cat ${mainpath}/jobs/requeued/${loadfilename/.docs/.out} | grep "ExitCode: " | cut -d' ' -f2)
        errcode=$(cat ${workpath}/${loadfilename/.docs/.err} | grep "ExitCode: " | cut -d' ' -f2)
        if [[ "${errcode}" == "" ]]
        then
            errcode="-1:0"
        fi
    else
        errcode="-1:0"
    fi
    echo "${loadfilename},${errcode},True"
done >> ${controllerpath}/skipped